datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  collegeId		String?
  college		College?	  @relation(fields: [collegeId], references: [id])
  role			Role		@default(PARTICIPANT)
  teamId		String?	    
  team			Team?	@relation(fields: [teamId], references: [id])
  characterPlayed CharacterOnUser?
  leaderOf		Team?	@relation(fields: [teamId2], references: [id],name: "TeamLead")
  teamId2		String?	@unique
  accounts      Account[]
  sessions      Session[]
}

model College {
  id        String   @id @default(cuid())
  name      String
  details   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Users     User[]
}

model Team {
  id        String      @id @default(cuid())
  name      String      @unique
  confirmed Boolean     @default(false)
  attended  Boolean     @default(false)
  members   User[]
  leader    User?     @relation(name: "TeamLead")
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

}

model CharacterOnUser{
	id	String	@id	@default(cuid())
	character	Characters
	playedBy	User @relation(fields: [id], references: [id], onDelete: Cascade)
	score		Int
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


enum Characters {
  UNDEFINED
  CHARACTER_1
  CHARACTER_2
  CHARACTER_3
  CHARACTER_4
}

enum Role {
  PARTICIPANT
  ADMIN
  ORGANIZER
  JUDGE
}


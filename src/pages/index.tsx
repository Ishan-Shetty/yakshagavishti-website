import { Button } from "@/components/ui/button";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { api } from "~/utils/api";

export default function Home() {
	const hello = api.example.hello.useQuery({ text: "from tRPC" });
	const register = api.user.register.useMutation();
	const addCollege = api.college.register.useMutation();
	return (
		<>
			<Head>
				<title>Create T3 App</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Button>Click me</Button>
			<main className=" flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
				<div className="flex flex-col items-center gap-2">
					<p className="text-2xl text-white">
						{hello.data
							? hello.data.greeting
							: "Loading tRPC query..."}
					</p>
					<button
						className="text-2xl"
						onClick={() => addCollege.mutate({ name: "test" })}
					>
						add college
					</button>
					<form
						onSubmit={(e) => {
							e.preventDefault();
							register.mutate({
								name: "test",
								email: "test@gmail.com",
								password: "test",
								phoneNumber: "9449414199",
								collegeId: "clmgklsex0004x9bjazxdsv4m",
								isLead: true,
							});
						}}
					>
						<input type="email" placeholder="email"></input>
						<input type="password" placeholder="password"></input>
						<button type="submit">Submit</button>
					</form>
					<AuthShowcase />
				</div>
			</main>
		</>
	);
}

function AuthShowcase() {
	const { data: sessionData } = useSession();
	const createTeam = api.team.register.useMutation();
	const { data: secretMessage } = api.example.getSecretMessage.useQuery(
		undefined, // no input
		{ enabled: sessionData?.user !== undefined }
	);

	return (
		<div className="flex flex-col items-center justify-center gap-4">
			<p className="text-center text-2xl text-white">
				{sessionData && (
					<span>Logged in as {sessionData.user?.name}</span>
				)}
				{secretMessage && <span> - {secretMessage}</span>}
			</p>

			{sessionData && (
				<button
					onClick={() =>
						createTeam.mutate({
							teamName: "test7",
							leadId: "sdfsdfsdf",
							members: [
								{
									password: "Test@123",
									name: "menber",
									phone_number: "9844545",
									collegeId: "asdfasd",
									email: "test@gmail.com",
									isLead: false,
									verify_email: false,
									blocked: false,
									email_verified: false,
									phone_verified: false,
								},
							],
						})
					}
				>
					Create Team
				</button>
			)}
			<button
				className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
				onClick={
					sessionData ? () => void signOut() : () => void signIn()
				}
			>
				{sessionData ? "Sign out" : "Sign in"}
			</button>
		</div>
	);
}

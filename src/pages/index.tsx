import { useMutation } from "@tanstack/react-query";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";

import { api } from "~/utils/api";

export default function Home() {
	const hello = api.example.hello.useQuery({ text: "from tRPC" });
	const register = api.user.register.useMutation();
	const addCollege = api.college.register.useMutation();

	return (
		<>
			<Head>
				<title>Create T3 App</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className=" flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
				<div className="flex flex-col items-center gap-2">
					<p className="text-2xl text-white">
						{hello.data
							? hello.data.greeting
							: "Loading tRPC query..."}
					</p>
					<button onClick={() => addCollege.mutate({ name: "test" })}>
						add college
					</button>
					<form
						onSubmit={(e) => {
							e.preventDefault();
							register.mutate({
								name: "test",
								email: "test@gmail.com",
								password: "test",
								phoneNumber: "9449414199",
								collegeId: "clmgklsex0004x9bjazxdsv4m",
								isLead: true,
								team: {
									teamName: "test",
									members: [
										{
											collegeId: "clmgklsex0004x9bjazxdsv4m",
											phoneNumber: "123",
											email: "member@gmail.com",
											password: "test",
											name: "member",
											isLead: false,
										},
									],
								},
							});
						}}
					>
						<input type="email" placeholder="email"></input>
						<input type="password" placeholder="password"></input>
						<input type="submit" value={"Register"}></input>
					</form>
					<AuthShowcase />
				</div>
			</main>
		</>
	);
}

function AuthShowcase() {
	const { data: sessionData } = useSession();

	const { data: secretMessage } = api.example.getSecretMessage.useQuery(
		undefined, // no input
		{ enabled: sessionData?.user !== undefined }
	);

	return (
		<div className="flex flex-col items-center justify-center gap-4">
			<p className="text-center text-2xl text-white">
				{sessionData && (
					<span>Logged in as {sessionData.user?.name}</span>
				)}
				{secretMessage && <span> - {secretMessage}</span>}
			</p>
			<button
				className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
				onClick={
					sessionData ? () => void signOut() : () => void signIn()
				}
			>
				{sessionData ? "Sign out" : "Sign in"}
			</button>
		</div>
	);
}
